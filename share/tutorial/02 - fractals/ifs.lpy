module @Ls

previousString = None
def StartEach(lstring):
  # retrieve previous structure
  global previousString
  previousString = lstring
  
  # generate global symbol to represent the previous structure
  return Lstring('@Ls(1)')

Axiom: F

derivation length: 4

production:
decomposition:
maximum depth: 1

@Ls(s) :
  # generate previous structure with a scaling factor
  nproduce  @Di(s)
  nsproduce(previousString)
  nproduce @Di(1./s)

production:

@Ls(x) --> @Ls(x/3.) + @Ls(x/3.) -- @Ls(x/3.) + @Ls(x/3.)

interpretation:


endlsystem
