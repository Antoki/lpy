module @Ls

previousString = None
def StartEach(lstring):
  # retrieve previous structure
  global previousString
  previousString = lstring
  
  # generate global symbol to represent the previous structure
  return Lstring('@Ls')

def StartInterpretation():
  nproduce -(90)

Axiom: F

derivation length: 4

production:
decomposition:
maximum depth: 1

# generate previous structure with a scaling factor
@Ls : nsproduce(previousString)

production:

@Ls --> @Di(1/3.) @Ls  +  @Ls --  @Ls  +  @Ls @Di(3.)

interpretation:

F --> F

endlsystem
