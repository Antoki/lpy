# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/fboudon/Develop/oagit/lpy/src/openalea/lpy/gui/lpymainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1063, 622)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/logo/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setContentsMargins(4, 4, 4, 4)
        self.gridLayout_3.setSpacing(0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.scalarDock = QtWidgets.QDockWidget(self.centralwidget)
        self.scalarDock.setObjectName("scalarDock")
        self.dockWidgetContents_8 = QtWidgets.QWidget()
        self.dockWidgetContents_8.setObjectName("dockWidgetContents_8")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.dockWidgetContents_8)
        self.gridLayout_2.setContentsMargins(1, 1, 1, 2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.scalarEditor = ScalarEditor(self.dockWidgetContents_8)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(222, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(191, 255, 191))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(222, 255, 222))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(191, 255, 191))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(236, 233, 216))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(191, 255, 191))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.scalarEditor.setPalette(palette)
        self.scalarEditor.setAutoScrollMargin(7)
        self.scalarEditor.setEditTriggers(QtWidgets.QAbstractItemView.AnyKeyPressed|QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.EditKeyPressed|QtWidgets.QAbstractItemView.SelectedClicked)
        self.scalarEditor.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.scalarEditor.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.scalarEditor.setAlternatingRowColors(True)
        self.scalarEditor.setItemsExpandable(True)
        self.scalarEditor.setObjectName("scalarEditor")
        self.gridLayout_2.addWidget(self.scalarEditor, 0, 0, 1, 1)
        self.scalarDock.setWidget(self.dockWidgetContents_8)
        self.gridLayout_3.addWidget(self.scalarDock, 0, 0, 1, 1)
        self.materialDock = QtWidgets.QDockWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.materialDock.sizePolicy().hasHeightForWidth())
        self.materialDock.setSizePolicy(sizePolicy)
        self.materialDock.setObjectName("materialDock")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.materialed = MaterialEditor(self.dockWidgetContents_2)
        self.materialed.setObjectName("materialed")
        self.verticalLayout_3.addWidget(self.materialed)
        self.materialDock.setWidget(self.dockWidgetContents_2)
        self.gridLayout_3.addWidget(self.materialDock, 0, 1, 1, 1)
        self.parametersDock = QtWidgets.QDockWidget(self.centralwidget)
        self.parametersDock.setObjectName("parametersDock")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.dockWidgetContents_3)
        self.verticalLayout_5.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_5.setSpacing(2)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.groupBox = QtWidgets.QGroupBox(self.dockWidgetContents_3)
        self.groupBox.setObjectName("groupBox")
        self.hboxlayout = QtWidgets.QHBoxLayout(self.groupBox)
        self.hboxlayout.setObjectName("hboxlayout")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setObjectName("label")
        self.hboxlayout.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(1, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hboxlayout.addItem(spacerItem)
        self.animtimestep = QtWidgets.QSlider(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.animtimestep.sizePolicy().hasHeightForWidth())
        self.animtimestep.setSizePolicy(sizePolicy)
        self.animtimestep.setMinimum(1)
        self.animtimestep.setMaximum(2000)
        self.animtimestep.setProperty("value", 50)
        self.animtimestep.setOrientation(QtCore.Qt.Horizontal)
        self.animtimestep.setObjectName("animtimestep")
        self.hboxlayout.addWidget(self.animtimestep)
        spacerItem1 = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hboxlayout.addItem(spacerItem1)
        self.animtimeSpinBox = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.animtimeSpinBox.setDecimals(3)
        self.animtimeSpinBox.setSingleStep(0.1)
        self.animtimeSpinBox.setObjectName("animtimeSpinBox")
        self.hboxlayout.addWidget(self.animtimeSpinBox)
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setObjectName("label_2")
        self.hboxlayout.addWidget(self.label_2)
        self.verticalLayout_5.addWidget(self.groupBox)
        self.parametersTable = QtWidgets.QTreeView(self.dockWidgetContents_3)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 215))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(254, 255, 155))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 215))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(254, 255, 155))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(236, 233, 216))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(254, 255, 155))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.parametersTable.setPalette(palette)
        self.parametersTable.setMidLineWidth(1)
        self.parametersTable.setTabKeyNavigation(True)
        self.parametersTable.setDragEnabled(True)
        self.parametersTable.setAlternatingRowColors(True)
        self.parametersTable.setRootIsDecorated(False)
        self.parametersTable.setAnimated(True)
        self.parametersTable.setAllColumnsShowFocus(True)
        self.parametersTable.setObjectName("parametersTable")
        self.verticalLayout_5.addWidget(self.parametersTable)
        self.parametersDock.setWidget(self.dockWidgetContents_3)
        self.gridLayout_3.addWidget(self.parametersDock, 0, 2, 4, 1)
        self.descriptionDock = QtWidgets.QDockWidget(self.centralwidget)
        self.descriptionDock.setObjectName("descriptionDock")
        self.dockWidgetContents_4 = QtWidgets.QWidget()
        self.dockWidgetContents_4.setObjectName("dockWidgetContents_4")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.dockWidgetContents_4)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.lpytoolbox = QtWidgets.QToolBox(self.dockWidgetContents_4)
        self.lpytoolbox.setMidLineWidth(1)
        self.lpytoolbox.setObjectName("lpytoolbox")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 112, 180))
        self.page.setObjectName("page")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.page)
        self.verticalLayout_2.setContentsMargins(2, 2, 2, 0)
        self.verticalLayout_2.setSpacing(2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.descriptionEdit = QtWidgets.QTextEdit(self.page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.descriptionEdit.sizePolicy().hasHeightForWidth())
        self.descriptionEdit.setSizePolicy(sizePolicy)
        self.descriptionEdit.setAcceptRichText(False)
        self.descriptionEdit.setObjectName("descriptionEdit")
        self.verticalLayout_2.addWidget(self.descriptionEdit)
        self.label_7 = QtWidgets.QLabel(self.page)
        self.label_7.setObjectName("label_7")
        self.verticalLayout_2.addWidget(self.label_7)
        self.referenceEdit = QtWidgets.QTextEdit(self.page)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.referenceEdit.sizePolicy().hasHeightForWidth())
        self.referenceEdit.setSizePolicy(sizePolicy)
        self.referenceEdit.setMaximumSize(QtCore.QSize(16777215, 80))
        self.referenceEdit.setAcceptRichText(False)
        self.referenceEdit.setObjectName("referenceEdit")
        self.verticalLayout_2.addWidget(self.referenceEdit)
        self.lpytoolbox.addItem(self.page, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 98, 296))
        self.page_2.setObjectName("page_2")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setSpacing(2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_3 = QtWidgets.QLabel(self.page_2)
        self.label_3.setObjectName("label_3")
        self.verticalLayout.addWidget(self.label_3)
        self.authorsEdit = QtWidgets.QTextEdit(self.page_2)
        self.authorsEdit.setObjectName("authorsEdit")
        self.verticalLayout.addWidget(self.authorsEdit)
        self.label_4 = QtWidgets.QLabel(self.page_2)
        self.label_4.setObjectName("label_4")
        self.verticalLayout.addWidget(self.label_4)
        self.intitutesEdit = QtWidgets.QTextEdit(self.page_2)
        self.intitutesEdit.setObjectName("intitutesEdit")
        self.verticalLayout.addWidget(self.intitutesEdit)
        self.label_5 = QtWidgets.QLabel(self.page_2)
        self.label_5.setObjectName("label_5")
        self.verticalLayout.addWidget(self.label_5)
        self.copyrightEdit = QtWidgets.QTextEdit(self.page_2)
        self.copyrightEdit.setObjectName("copyrightEdit")
        self.verticalLayout.addWidget(self.copyrightEdit)
        self.lpytoolbox.addItem(self.page_2, "")
        self.verticalLayout_6.addWidget(self.lpytoolbox)
        self.descriptionDock.setWidget(self.dockWidgetContents_4)
        self.gridLayout_3.addWidget(self.descriptionDock, 0, 3, 4, 1)
        self.interpreterDock = QtWidgets.QDockWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.interpreterDock.sizePolicy().hasHeightForWidth())
        self.interpreterDock.setSizePolicy(sizePolicy)
        self.interpreterDock.setFloating(False)
        self.interpreterDock.setObjectName("interpreterDock")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.vboxlayout = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.vboxlayout.setContentsMargins(0, 0, 0, 0)
        self.vboxlayout.setObjectName("vboxlayout")
        self.interpreterDock.setWidget(self.dockWidgetContents)
        self.gridLayout_3.addWidget(self.interpreterDock, 5, 1, 1, 1)
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.pageEdition = QtWidgets.QWidget()
        self.pageEdition.setObjectName("pageEdition")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.pageEdition)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.frame = QtWidgets.QFrame(self.pageEdition)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout = QtWidgets.QGridLayout(self.frame)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.documentNames = LpyTabBar(self.frame)
        self.documentNames.setObjectName("documentNames")
        self.gridLayout.addWidget(self.documentNames, 1, 0, 1, 1)
        self.documentNamesMore = LpyTabBarNeighbor(self.frame)
        self.documentNamesMore.setObjectName("documentNamesMore")
        self.gridLayout.addWidget(self.documentNamesMore, 1, 1, 1, 1)
        self.documentNamesMore2 = LpyTabBarNeighbor(self.frame)
        self.documentNamesMore2.setObjectName("documentNamesMore2")
        self.gridLayout.addWidget(self.documentNamesMore2, 1, 2, 1, 1)
        self.codeeditor = LpyCodeEditor(self.frame)
        self.codeeditor.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Courier New")
        self.codeeditor.setFont(font)
        self.codeeditor.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.codeeditor.setTabStopWidth(20)
        self.codeeditor.setObjectName("codeeditor")
        self.gridLayout.addWidget(self.codeeditor, 2, 0, 1, 3)
        self.frameGoto = QtWidgets.QFrame(self.frame)
        self.frameGoto.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameGoto.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameGoto.setObjectName("frameGoto")
        self._2 = QtWidgets.QGridLayout(self.frameGoto)
        self._2.setContentsMargins(0, 0, 0, 0)
        self._2.setHorizontalSpacing(3)
        self._2.setObjectName("_2")
        self.closeGoto = QtWidgets.QToolButton(self.frameGoto)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(118, 116, 108))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.closeGoto.setPalette(palette)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/images/icons/closetab.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.closeGoto.setIcon(icon1)
        self.closeGoto.setAutoRaise(True)
        self.closeGoto.setObjectName("closeGoto")
        self._2.addWidget(self.closeGoto, 0, 0, 1, 1)
        self.label_10 = QtWidgets.QLabel(self.frameGoto)
        self.label_10.setObjectName("label_10")
        self._2.addWidget(self.label_10, 0, 1, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(61, 23, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self._2.addItem(spacerItem2, 0, 3, 1, 1)
        self.gotoEdit = QtWidgets.QLineEdit(self.frameGoto)
        self.gotoEdit.setObjectName("gotoEdit")
        self._2.addWidget(self.gotoEdit, 0, 4, 1, 1)
        self.gridLayout.addWidget(self.frameGoto, 3, 0, 1, 1)
        self.verticalLayout_4.addWidget(self.frame)
        self.frameFind = QtWidgets.QFrame(self.pageEdition)
        self.frameFind.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameFind.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameFind.setObjectName("frameFind")
        self.gridlayout = QtWidgets.QGridLayout(self.frameFind)
        self.gridlayout.setContentsMargins(0, 0, 0, 0)
        self.gridlayout.setHorizontalSpacing(3)
        self.gridlayout.setObjectName("gridlayout")
        self.closeFind = QtWidgets.QToolButton(self.frameFind)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(170, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(118, 116, 108))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        self.closeFind.setPalette(palette)
        self.closeFind.setIcon(icon1)
        self.closeFind.setAutoRaise(True)
        self.closeFind.setObjectName("closeFind")
        self.gridlayout.addWidget(self.closeFind, 0, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.frameFind)
        self.label_8.setObjectName("label_8")
        self.gridlayout.addWidget(self.label_8, 0, 1, 1, 1)
        self.findEdit = QtWidgets.QLineEdit(self.frameFind)
        self.findEdit.setObjectName("findEdit")
        self.gridlayout.addWidget(self.findEdit, 0, 2, 1, 1)
        self.findNextButton = QtWidgets.QPushButton(self.frameFind)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/images/icons/down.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.findNextButton.setIcon(icon2)
        self.findNextButton.setObjectName("findNextButton")
        self.gridlayout.addWidget(self.findNextButton, 0, 3, 1, 1)
        self.findPreviousButton = QtWidgets.QPushButton(self.frameFind)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.findPreviousButton.sizePolicy().hasHeightForWidth())
        self.findPreviousButton.setSizePolicy(sizePolicy)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/images/icons/up.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.findPreviousButton.setIcon(icon3)
        self.findPreviousButton.setObjectName("findPreviousButton")
        self.gridlayout.addWidget(self.findPreviousButton, 0, 4, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(61, 23, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridlayout.addItem(spacerItem3, 0, 5, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(161, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridlayout.addItem(spacerItem4, 1, 0, 1, 3)
        self.matchCaseButton = QtWidgets.QRadioButton(self.frameFind)
        self.matchCaseButton.setAutoExclusive(False)
        self.matchCaseButton.setObjectName("matchCaseButton")
        self.gridlayout.addWidget(self.matchCaseButton, 1, 3, 1, 1)
        self.wholeWordButton = QtWidgets.QRadioButton(self.frameFind)
        self.wholeWordButton.setAutoExclusive(False)
        self.wholeWordButton.setObjectName("wholeWordButton")
        self.gridlayout.addWidget(self.wholeWordButton, 1, 4, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridlayout.addItem(spacerItem5, 1, 5, 1, 1)
        self.verticalLayout_4.addWidget(self.frameFind)
        self.frameReplace = QtWidgets.QFrame(self.pageEdition)
        self.frameReplace.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameReplace.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameReplace.setObjectName("frameReplace")
        self.hboxlayout1 = QtWidgets.QHBoxLayout(self.frameReplace)
        self.hboxlayout1.setContentsMargins(0, 0, 0, 0)
        self.hboxlayout1.setSpacing(3)
        self.hboxlayout1.setObjectName("hboxlayout1")
        self.label_9 = QtWidgets.QLabel(self.frameReplace)
        self.label_9.setObjectName("label_9")
        self.hboxlayout1.addWidget(self.label_9)
        self.replaceEdit = QtWidgets.QLineEdit(self.frameReplace)
        self.replaceEdit.setObjectName("replaceEdit")
        self.hboxlayout1.addWidget(self.replaceEdit)
        self.replaceButton = QtWidgets.QPushButton(self.frameReplace)
        self.replaceButton.setObjectName("replaceButton")
        self.hboxlayout1.addWidget(self.replaceButton)
        self.replaceAllButton = QtWidgets.QPushButton(self.frameReplace)
        self.replaceAllButton.setObjectName("replaceAllButton")
        self.hboxlayout1.addWidget(self.replaceAllButton)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hboxlayout1.addItem(spacerItem6)
        self.verticalLayout_4.addWidget(self.frameReplace)
        self.stackedWidget.addWidget(self.pageEdition)
        self.pageView3D = QtWidgets.QWidget()
        self.pageView3D.setObjectName("pageView3D")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.pageView3D)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.view3D = LpyView3D(self.pageView3D)
        self.view3D.setObjectName("view3D")
        self.verticalLayout_8.addWidget(self.view3D)
        self.stackedWidget.addWidget(self.pageView3D)
        self.gridLayout_3.addWidget(self.stackedWidget, 0, 5, 1, 1)
        self.helpDock = QtWidgets.QDockWidget(self.centralwidget)
        self.helpDock.setFloating(False)
        self.helpDock.setObjectName("helpDock")
        self.dockWidgetContents_5 = QtWidgets.QWidget()
        self.dockWidgetContents_5.setObjectName("dockWidgetContents_5")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.dockWidgetContents_5)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.helpDisplay = QtWidgets.QTextBrowser(self.dockWidgetContents_5)
        self.helpDisplay.setAutoFormatting(QtWidgets.QTextEdit.AutoAll)
        self.helpDisplay.setAcceptRichText(True)
        self.helpDisplay.setObjectName("helpDisplay")
        self.verticalLayout_7.addWidget(self.helpDisplay)
        self.helpDock.setWidget(self.dockWidgetContents_5)
        self.gridLayout_3.addWidget(self.helpDock, 0, 4, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1063, 22))
        self.menubar.setObjectName("menubar")
        self.menuL_systems = QtWidgets.QMenu(self.menubar)
        self.menuL_systems.setObjectName("menuL_systems")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuRecents = QtWidgets.QMenu(self.menuFile)
        self.menuRecents.setObjectName("menuRecents")
        self.menuImport = QtWidgets.QMenu(self.menuFile)
        self.menuImport.setObjectName("menuImport")
        self.menuTutorials = QtWidgets.QMenu(self.menuFile)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/images/icons/book.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuTutorials.setIcon(icon4)
        self.menuTutorials.setObjectName("menuTutorials")
        self.menuSVN = QtWidgets.QMenu(self.menuFile)
        self.menuSVN.setObjectName("menuSVN")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.FileBar = QtWidgets.QToolBar(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("../../../../../../../../../../../../../../.designer/backup/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.FileBar.setWindowIcon(icon5)
        self.FileBar.setIconSize(QtCore.QSize(32, 32))
        self.FileBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.FileBar.setObjectName("FileBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.FileBar)
        self.LsytemBar = QtWidgets.QToolBar(MainWindow)
        self.LsytemBar.setIconSize(QtCore.QSize(32, 32))
        self.LsytemBar.setToolButtonStyle(QtCore.Qt.ToolButtonTextBesideIcon)
        self.LsytemBar.setObjectName("LsytemBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.LsytemBar)
        self.profilerDock = QtWidgets.QDockWidget(MainWindow)
        self.profilerDock.setObjectName("profilerDock")
        self.dockWidgetContents_9 = QtWidgets.QWidget()
        self.dockWidgetContents_9.setObjectName("dockWidgetContents_9")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.dockWidgetContents_9)
        self.verticalLayout_9.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_9.setSpacing(2)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.profileView = QtWidgets.QTreeView(self.dockWidgetContents_9)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(244, 222, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(234, 191, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(244, 222, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(234, 191, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(236, 233, 216))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(234, 191, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        self.profileView.setPalette(palette)
        self.profileView.setAlternatingRowColors(True)
        self.profileView.setSortingEnabled(True)
        self.profileView.setObjectName("profileView")
        self.verticalLayout_9.addWidget(self.profileView)
        self.profilerDock.setWidget(self.dockWidgetContents_9)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.profilerDock)
        self.editToolBar = QtWidgets.QToolBar(MainWindow)
        self.editToolBar.setIconSize(QtCore.QSize(32, 32))
        self.editToolBar.setObjectName("editToolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.editToolBar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/images/icons/fileopen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon6)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/images/icons/filesave.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave.setIcon(icon7)
        self.actionSave.setObjectName("actionSave")
        self.actionSaveAs = QtWidgets.QAction(MainWindow)
        self.actionSaveAs.setIcon(icon7)
        self.actionSaveAs.setObjectName("actionSaveAs")
        self.actionExit = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/images/icons/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExit.setIcon(icon8)
        self.actionExit.setObjectName("actionExit")
        self.actionRun = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/images/icons/run.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRun.setIcon(icon9)
        self.actionRun.setObjectName("actionRun")
        self.actionAnimate = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/images/icons/play.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAnimate.setIcon(icon10)
        self.actionAnimate.setObjectName("actionAnimate")
        self.actionStep = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/images/icons/step.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStep.setIcon(icon11)
        self.actionStep.setObjectName("actionStep")
        self.actionRewind = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/images/icons/rewind.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRewind.setIcon(icon12)
        self.actionRewind.setObjectName("actionRewind")
        self.actionNew = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/images/icons/filenew.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNew.setIcon(icon13)
        self.actionNew.setObjectName("actionNew")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/images/icons/editundo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon14)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/images/icons/editredo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon15)
        self.actionRedo.setObjectName("actionRedo")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/images/icons/editcopy.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon16)
        self.actionCopy.setObjectName("actionCopy")
        self.actionCut = QtWidgets.QAction(MainWindow)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/images/icons/editcut.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon17)
        self.actionCut.setObjectName("actionCut")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/images/icons/editpaste.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon18)
        self.actionPaste.setObjectName("actionPaste")
        self.actionSelect_All = QtWidgets.QAction(MainWindow)
        self.actionSelect_All.setObjectName("actionSelect_All")
        self.actionFind = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/images/icons/editfind.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFind.setIcon(icon19)
        self.actionFind.setObjectName("actionFind")
        self.actionPythonShell = QtWidgets.QAction(MainWindow)
        self.actionPythonShell.setObjectName("actionPythonShell")
        self.actionClear = QtWidgets.QAction(MainWindow)
        self.actionClear.setObjectName("actionClear")
        self.actionUseThread = QtWidgets.QAction(MainWindow)
        self.actionUseThread.setCheckable(True)
        self.actionUseThread.setObjectName("actionUseThread")
        self.actionFitAnimationView = QtWidgets.QAction(MainWindow)
        self.actionFitAnimationView.setCheckable(True)
        self.actionFitAnimationView.setObjectName("actionFitAnimationView")
        self.actionClose = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/images/icons/fileclose.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClose.setIcon(icon20)
        self.actionClose.setObjectName("actionClose")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAboutQt = QtWidgets.QAction(MainWindow)
        self.actionAboutQt.setObjectName("actionAboutQt")
        self.actionAboutVPlants = QtWidgets.QAction(MainWindow)
        self.actionAboutVPlants.setObjectName("actionAboutVPlants")
        self.actionClearShell = QtWidgets.QAction(MainWindow)
        self.actionClearShell.setObjectName("actionClearShell")
        self.actionSyntax = QtWidgets.QAction(MainWindow)
        self.actionSyntax.setCheckable(True)
        self.actionSyntax.setObjectName("actionSyntax")
        self.actionComment = QtWidgets.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/images/icons/next-green.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionComment.setIcon(icon21)
        self.actionComment.setObjectName("actionComment")
        self.actionUncomment = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/images/icons/prev-green.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUncomment.setIcon(icon22)
        self.actionUncomment.setObjectName("actionUncomment")
        self.actionInsertTab = QtWidgets.QAction(MainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/images/icons/next.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionInsertTab.setIcon(icon23)
        self.actionInsertTab.setObjectName("actionInsertTab")
        self.actionRemoveTab = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/images/icons/prev.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemoveTab.setIcon(icon24)
        self.actionRemoveTab.setObjectName("actionRemoveTab")
        self.actionReplace = QtWidgets.QAction(MainWindow)
        self.actionReplace.setObjectName("actionReplace")
        self.actionParseDebug = QtWidgets.QAction(MainWindow)
        self.actionParseDebug.setCheckable(True)
        self.actionParseDebug.setObjectName("actionParseDebug")
        self.actionStop = QtWidgets.QAction(MainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/images/icons/pause.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStop.setIcon(icon25)
        self.actionStop.setObjectName("actionStop")
        self.actionZoomIn = QtWidgets.QAction(MainWindow)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/images/icons/zoomin.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomIn.setIcon(icon26)
        self.actionZoomIn.setObjectName("actionZoomIn")
        self.actionZoomOut = QtWidgets.QAction(MainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/images/icons/zoomout.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionZoomOut.setIcon(icon27)
        self.actionZoomOut.setObjectName("actionZoomOut")
        self.actionNoZoom = QtWidgets.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/images/icons/resetzoom.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNoZoom.setIcon(icon28)
        self.actionNoZoom.setObjectName("actionNoZoom")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionTabHightlight = QtWidgets.QAction(MainWindow)
        self.actionTabHightlight.setCheckable(True)
        self.actionTabHightlight.setObjectName("actionTabHightlight")
        self.actionSaveAll = QtWidgets.QAction(MainWindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/images/icons/filesaveall.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSaveAll.setIcon(icon29)
        self.actionSaveAll.setObjectName("actionSaveAll")
        self.actionGoto = QtWidgets.QAction(MainWindow)
        self.actionGoto.setObjectName("actionGoto")
        self.actionDebug = QtWidgets.QAction(MainWindow)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/images/icons/play-green.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDebug.setIcon(icon30)
        self.actionDebug.setObjectName("actionDebug")
        self.actionIterateTo = QtWidgets.QAction(MainWindow)
        self.actionIterateTo.setIcon(icon9)
        self.actionIterateTo.setObjectName("actionIterateTo")
        self.actionNextIterate = QtWidgets.QAction(MainWindow)
        self.actionNextIterate.setIcon(icon9)
        self.actionNextIterate.setObjectName("actionNextIterate")
        self.actionAutoRun = QtWidgets.QAction(MainWindow)
        self.actionAutoRun.setCheckable(True)
        self.actionAutoRun.setObjectName("actionAutoRun")
        self.actionProfile = QtWidgets.QAction(MainWindow)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/images/icons/play-yellow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionProfile.setIcon(icon31)
        self.actionProfile.setObjectName("actionProfile")
        self.actionPrint = QtWidgets.QAction(MainWindow)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/images/icons/print.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPrint.setIcon(icon32)
        self.actionPrint.setObjectName("actionPrint")
        self.actionRecord = QtWidgets.QAction(MainWindow)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/images/icons/record.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRecord.setIcon(icon33)
        self.actionRecord.setObjectName("actionRecord")
        self.actionStepInterpretation = QtWidgets.QAction(MainWindow)
        self.actionStepInterpretation.setIcon(icon11)
        self.actionStepInterpretation.setObjectName("actionStepInterpretation")
        self.actionView3D = QtWidgets.QAction(MainWindow)
        self.actionView3D.setCheckable(True)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/images/icons/editraise.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionView3D.setIcon(icon34)
        self.actionView3D.setObjectName("actionView3D")
        self.actionImportCpfgProject = QtWidgets.QAction(MainWindow)
        self.actionImportCpfgProject.setObjectName("actionImportCpfgProject")
        self.actionImportCpfgFile = QtWidgets.QAction(MainWindow)
        self.actionImportCpfgFile.setObjectName("actionImportCpfgFile")
        self.actionSubmitBug = QtWidgets.QAction(MainWindow)
        self.actionSubmitBug.setObjectName("actionSubmitBug")
        self.actionOnlineHelp = QtWidgets.QAction(MainWindow)
        self.actionOnlineHelp.setObjectName("actionOnlineHelp")
        self.actionSubmitFeature = QtWidgets.QAction(MainWindow)
        self.actionSubmitFeature.setObjectName("actionSubmitFeature")
        self.actionCheckUpdate = QtWidgets.QAction(MainWindow)
        self.actionCheckUpdate.setObjectName("actionCheckUpdate")
        self.actionTutorialTest1 = QtWidgets.QAction(MainWindow)
        self.actionTutorialTest1.setObjectName("actionTutorialTest1")
        self.actionExecute = QtWidgets.QAction(MainWindow)
        self.actionExecute.setIcon(icon30)
        self.actionExecute.setObjectName("actionExecute")
        self.actionSVNUpdate = QtWidgets.QAction(MainWindow)
        self.actionSVNUpdate.setObjectName("actionSVNUpdate")
        self.actionSVNIsUpToDate = QtWidgets.QAction(MainWindow)
        self.actionSVNIsUpToDate.setObjectName("actionSVNIsUpToDate")
        self.actionSVNCommit = QtWidgets.QAction(MainWindow)
        self.actionSVNCommit.setObjectName("actionSVNCommit")
        self.actionSVNRevert = QtWidgets.QAction(MainWindow)
        self.actionSVNRevert.setObjectName("actionSVNRevert")
        self.actionSVNAdd = QtWidgets.QAction(MainWindow)
        self.actionSVNAdd.setObjectName("actionSVNAdd")
        self.menuL_systems.addAction(self.actionRun)
        self.menuL_systems.addAction(self.actionAnimate)
        self.menuL_systems.addSeparator()
        self.menuL_systems.addAction(self.actionStep)
        self.menuL_systems.addAction(self.actionRewind)
        self.menuL_systems.addAction(self.actionStop)
        self.menuL_systems.addAction(self.actionStepInterpretation)
        self.menuL_systems.addSeparator()
        self.menuL_systems.addAction(self.actionIterateTo)
        self.menuL_systems.addAction(self.actionNextIterate)
        self.menuL_systems.addSeparator()
        self.menuL_systems.addAction(self.actionAutoRun)
        self.menuL_systems.addSeparator()
        self.menuL_systems.addAction(self.actionDebug)
        self.menuL_systems.addAction(self.actionProfile)
        self.menuL_systems.addSeparator()
        self.menuL_systems.addAction(self.actionRecord)
        self.menuRecents.addAction(self.actionClear)
        self.menuImport.addAction(self.actionImportCpfgProject)
        self.menuImport.addAction(self.actionImportCpfgFile)
        self.menuTutorials.addAction(self.actionTutorialTest1)
        self.menuSVN.addAction(self.actionSVNUpdate)
        self.menuSVN.addAction(self.actionSVNCommit)
        self.menuSVN.addAction(self.actionSVNRevert)
        self.menuSVN.addSeparator()
        self.menuSVN.addAction(self.actionSVNAdd)
        self.menuSVN.addSeparator()
        self.menuSVN.addAction(self.actionSVNIsUpToDate)
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSaveAs)
        self.menuFile.addAction(self.actionSaveAll)
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addAction(self.menuSVN.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuImport.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionPrint)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuRecents.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.menuTutorials.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionSelect_All)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionExecute)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionComment)
        self.menuEdit.addAction(self.actionUncomment)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionInsertTab)
        self.menuEdit.addAction(self.actionRemoveTab)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionFind)
        self.menuEdit.addAction(self.actionReplace)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionGoto)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionPreferences)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionAboutQt)
        self.menuHelp.addAction(self.actionAboutVPlants)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionOnlineHelp)
        self.menuHelp.addAction(self.actionSubmitBug)
        self.menuHelp.addAction(self.actionSubmitFeature)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionCheckUpdate)
        self.menuHelp.addSeparator()
        self.menuView.addAction(self.actionZoomIn)
        self.menuView.addAction(self.actionZoomOut)
        self.menuView.addAction(self.actionNoZoom)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionSyntax)
        self.menuView.addAction(self.actionTabHightlight)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionView3D)
        self.menuView.addSeparator()
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuL_systems.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.FileBar.addAction(self.actionNew)
        self.FileBar.addAction(self.actionOpen)
        self.FileBar.addAction(self.actionSave)
        self.FileBar.addAction(self.actionSaveAll)
        self.FileBar.addAction(self.actionClose)
        self.LsytemBar.addAction(self.actionRun)
        self.LsytemBar.addAction(self.actionAnimate)
        self.LsytemBar.addAction(self.actionStop)
        self.LsytemBar.addAction(self.actionRewind)
        self.LsytemBar.addAction(self.actionStep)
        self.LsytemBar.addAction(self.actionDebug)
        self.LsytemBar.addAction(self.actionProfile)
        self.LsytemBar.addAction(self.actionView3D)
        self.editToolBar.addAction(self.actionUndo)
        self.editToolBar.addAction(self.actionRedo)
        self.editToolBar.addAction(self.actionCopy)
        self.editToolBar.addAction(self.actionCut)
        self.editToolBar.addAction(self.actionPaste)
        self.editToolBar.addAction(self.actionFind)

        self.retranslateUi(MainWindow)
        self.lpytoolbox.setCurrentIndex(0)
        self.stackedWidget.setCurrentIndex(1)
        self.actionExit.triggered.connect(MainWindow.close)
        self.actionReplace.triggered.connect(self.frameFind.show)
        self.actionPaste.triggered.connect(self.codeeditor.paste)
        self.actionSelect_All.triggered.connect(self.codeeditor.selectAll)
        self.closeFind.pressed.connect(self.frameReplace.hide)
        self.actionFind.triggered.connect(self.frameReplace.hide)
        self.actionReplace.triggered.connect(self.frameReplace.show)
        self.actionReplace.triggered.connect(self.findEdit.setFocus)
        self.codeeditor.redoAvailable['bool'].connect(self.actionRedo.setEnabled)
        self.closeFind.pressed.connect(self.frameFind.hide)
        self.actionCut.triggered.connect(self.codeeditor.cut)
        self.actionUndo.triggered.connect(self.codeeditor.undo)
        self.actionCopy.triggered.connect(self.codeeditor.copy)
        self.actionRedo.triggered.connect(self.codeeditor.redo)
        self.codeeditor.undoAvailable['bool'].connect(self.actionUndo.setEnabled)
        self.closeGoto.pressed.connect(self.frameGoto.hide)
        self.actionGoto.triggered.connect(self.frameGoto.show)
        self.gotoEdit.returnPressed.connect(self.frameGoto.hide)
        self.actionGoto.triggered.connect(self.gotoEdit.setFocus)
        self.actionGoto.triggered.connect(self.frameFind.hide)
        self.actionGoto.triggered.connect(self.frameReplace.hide)
        self.actionFind.triggered.connect(self.frameGoto.hide)
        self.actionReplace.triggered.connect(self.frameGoto.hide)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.codeeditor, self.closeFind)
        MainWindow.setTabOrder(self.closeFind, self.findEdit)
        MainWindow.setTabOrder(self.findEdit, self.replaceEdit)
        MainWindow.setTabOrder(self.replaceEdit, self.findNextButton)
        MainWindow.setTabOrder(self.findNextButton, self.findPreviousButton)
        MainWindow.setTabOrder(self.findPreviousButton, self.replaceButton)
        MainWindow.setTabOrder(self.replaceButton, self.replaceAllButton)
        MainWindow.setTabOrder(self.replaceAllButton, self.matchCaseButton)
        MainWindow.setTabOrder(self.matchCaseButton, self.wholeWordButton)
        MainWindow.setTabOrder(self.wholeWordButton, self.animtimeSpinBox)
        MainWindow.setTabOrder(self.animtimeSpinBox, self.animtimestep)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "L-Py"))
        self.scalarDock.setWindowTitle(_translate("MainWindow", "Scalar Parameters"))
        self.materialDock.setWindowTitle(_translate("MainWindow", "Color Map"))
        self.parametersDock.setWindowTitle(_translate("MainWindow", "Configuration"))
        self.groupBox.setTitle(_translate("MainWindow", "Animation"))
        self.label.setText(_translate("MainWindow", "Time Step"))
        self.label_2.setText(_translate("MainWindow", "s."))
        self.descriptionDock.setWindowTitle(_translate("MainWindow", "Description"))
        self.label_7.setText(_translate("MainWindow", "References"))
        self.lpytoolbox.setItemText(self.lpytoolbox.indexOf(self.page), _translate("MainWindow", "Information"))
        self.label_3.setText(_translate("MainWindow", "Authors"))
        self.label_4.setText(_translate("MainWindow", "Institutes"))
        self.label_5.setText(_translate("MainWindow", "Copyright"))
        self.lpytoolbox.setItemText(self.lpytoolbox.indexOf(self.page_2), _translate("MainWindow", "Authors"))
        self.interpreterDock.setWindowTitle(_translate("MainWindow", "Python Shell"))
        self.label_10.setText(_translate("MainWindow", "Go to"))
        self.label_8.setText(_translate("MainWindow", "Find"))
        self.findNextButton.setText(_translate("MainWindow", "Next"))
        self.findPreviousButton.setText(_translate("MainWindow", "Previous"))
        self.matchCaseButton.setText(_translate("MainWindow", "Match Case"))
        self.wholeWordButton.setText(_translate("MainWindow", "Whole word"))
        self.label_9.setText(_translate("MainWindow", "Replace"))
        self.replaceButton.setText(_translate("MainWindow", "Replace"))
        self.replaceAllButton.setText(_translate("MainWindow", "Rep. All"))
        self.helpDock.setWindowTitle(_translate("MainWindow", "Help Card"))
        self.menuL_systems.setTitle(_translate("MainWindow", "L-systems"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuRecents.setTitle(_translate("MainWindow", "Recents"))
        self.menuImport.setTitle(_translate("MainWindow", "Import"))
        self.menuTutorials.setTitle(_translate("MainWindow", "Tutorials"))
        self.menuSVN.setTitle(_translate("MainWindow", "SVN"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.FileBar.setWindowTitle(_translate("MainWindow", "File Bar"))
        self.LsytemBar.setWindowTitle(_translate("MainWindow", "Lsystem Bar"))
        self.profilerDock.setWindowTitle(_translate("MainWindow", "Profile"))
        self.editToolBar.setWindowTitle(_translate("MainWindow", "Edit Bar"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSaveAs.setText(_translate("MainWindow", "Save As"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Esc"))
        self.actionRun.setText(_translate("MainWindow", "Run"))
        self.actionRun.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionAnimate.setText(_translate("MainWindow", "Animate"))
        self.actionStep.setText(_translate("MainWindow", "Step"))
        self.actionStep.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionRewind.setText(_translate("MainWindow", "Rewind"))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionUndo.setText(_translate("MainWindow", "Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Y"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionSelect_All.setText(_translate("MainWindow", "Select All"))
        self.actionFind.setText(_translate("MainWindow", "Find"))
        self.actionFind.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionPythonShell.setText(_translate("MainWindow", "Python Shell"))
        self.actionClear.setText(_translate("MainWindow", "Clear"))
        self.actionUseThread.setText(_translate("MainWindow", "Use Thread"))
        self.actionFitAnimationView.setText(_translate("MainWindow", "Fit Animate View"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionAbout.setText(_translate("MainWindow", "About L-Py"))
        self.actionAboutQt.setText(_translate("MainWindow", "About Qt"))
        self.actionAboutVPlants.setText(_translate("MainWindow", "About V. Plants"))
        self.actionClearShell.setText(_translate("MainWindow", "Clear Shell"))
        self.actionSyntax.setText(_translate("MainWindow", "Syntax Hightlight"))
        self.actionComment.setText(_translate("MainWindow", "Comment Block"))
        self.actionComment.setShortcut(_translate("MainWindow", "Ctrl+K"))
        self.actionUncomment.setText(_translate("MainWindow", "Uncomment Block"))
        self.actionInsertTab.setText(_translate("MainWindow", "Insert Tab"))
        self.actionRemoveTab.setText(_translate("MainWindow", "Remove Tab"))
        self.actionReplace.setText(_translate("MainWindow", "Replace"))
        self.actionReplace.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionParseDebug.setText(_translate("MainWindow", "Parse Debug"))
        self.actionStop.setText(_translate("MainWindow", "Stop"))
        self.actionZoomIn.setText(_translate("MainWindow", "Zoom In"))
        self.actionZoomOut.setText(_translate("MainWindow", "Zoom Out"))
        self.actionNoZoom.setText(_translate("MainWindow", "Zoom 1:1"))
        self.actionPreferences.setText(_translate("MainWindow", "Preferences..."))
        self.actionTabHightlight.setText(_translate("MainWindow", "Tab Hightlight"))
        self.actionSaveAll.setText(_translate("MainWindow", "Save All"))
        self.actionGoto.setText(_translate("MainWindow", "Go to line ..."))
        self.actionGoto.setShortcut(_translate("MainWindow", "Ctrl+G"))
        self.actionDebug.setText(_translate("MainWindow", "Debug"))
        self.actionIterateTo.setText(_translate("MainWindow", "Iterate n times"))
        self.actionNextIterate.setText(_translate("MainWindow", "Next n iterations"))
        self.actionNextIterate.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.actionAutoRun.setText(_translate("MainWindow", "Auto-Run"))
        self.actionProfile.setText(_translate("MainWindow", "Profile"))
        self.actionPrint.setText(_translate("MainWindow", "Print"))
        self.actionRecord.setText(_translate("MainWindow", "Record"))
        self.actionStepInterpretation.setText(_translate("MainWindow", "Step Interpretation"))
        self.actionView3D.setText(_translate("MainWindow", "View 3D"))
        self.actionImportCpfgProject.setText(_translate("MainWindow", "Cpfg project"))
        self.actionImportCpfgFile.setText(_translate("MainWindow", "Cpfg file"))
        self.actionSubmitBug.setText(_translate("MainWindow", "Submit a Bug"))
        self.actionOnlineHelp.setText(_translate("MainWindow", "L-Py Website"))
        self.actionSubmitFeature.setText(_translate("MainWindow", "Submit a Feature"))
        self.actionCheckUpdate.setText(_translate("MainWindow", "Check for Update"))
        self.actionTutorialTest1.setText(_translate("MainWindow", "Test 1"))
        self.actionExecute.setText(_translate("MainWindow", "Execute ..."))
        self.actionExecute.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionSVNUpdate.setText(_translate("MainWindow", "Update"))
        self.actionSVNIsUpToDate.setText(_translate("MainWindow", "Is Up-to-Date ?"))
        self.actionSVNCommit.setText(_translate("MainWindow", "Commit"))
        self.actionSVNRevert.setText(_translate("MainWindow", "Revert"))
        self.actionSVNAdd.setText(_translate("MainWindow", "Add"))

from lpycodeeditor import LpyCodeEditor
from lpytabbar import LpyTabBar, LpyTabBarNeighbor
from lpyview3d import LpyView3D
from openalea.plantgl.gui.materialeditor import MaterialEditor
from scalareditor import ScalarEditor
import lpyresources_rc
